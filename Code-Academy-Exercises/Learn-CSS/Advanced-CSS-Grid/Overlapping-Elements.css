.container {
  display: grid;
  max-width: 900px;
  position: relative;
  margin: auto;
  grid-gap: 10px;
  grid-template: repeat(12, 1fr) / repeat(6, 1fr);
}

h1, h2, h3 {
  font-family: monospace;
  text-align: center;
}

header {
  background-color: dodgerblue;
  grid-area: 1 / 1 / 3 / 7;
}

nav {
  background-color: beige;
  grid-area: 3 / 1 / 4 / 7;
}

.left {
  grid-area: 4 / 1 / 9 / 5;
  background-color: dodgerblue;
}

.right {
  grid-area: 4 / 5 / 9 / 7;
  background-color: beige;
}

.overlap {
  grid-area: 6 / 4 / span 2 / span 2;
  background-color: lightcoral;
  z-index: 5;
}

footer {
  grid-area: 9 / 1 / 13 / 7;
  background-color: dodgerblue;
}

/*css can easily create overlapping elements which can be beneficial for design
and for function.
here we declarations for an element classed overlap, we also used z-index to bring
to front.*/
